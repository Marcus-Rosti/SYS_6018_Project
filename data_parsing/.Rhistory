add = TRUE, pch = 18, clab = c("depth", "m"),
colkey = list(length = 0.5, width = 0.5,
dist = 0.05, cex.axis = 0.8, cex.clab = 0.8)
)
plotrgl(new = TRUE)
plotrgl(new = TRUE)
scatter3D(data=quakes,x = long, y = lat,
z = rep(-20, length.out = length(long)),
colvar = quakes$depth, col = gg.col(100),
pch = 18, clab = c("depth", "m"),
colkey = list(length = 0.5, width = 0.5,
dist = 0.05, cex.axis = 0.8, cex.clab = 0.8)
)
scatter3D(data=quakes,x = long, y = lat,
z = rep(-20, length.out = length(long)),
colvar = quakes$depth, col = gg.col(100),
add = TRUE, pch = 18, clab = c("depth", "m"),
colkey = list(length = 0.5, width = 0.5,
dist = 0.05, cex.axis = 0.8, cex.clab = 0.8)
)
View(quakes)
library(scatterplot3d)
install.packages("scatterplot3d")
library(scatterplot3d)
attach(mtcars)
scatterplot3d(wt,disp,mpg, pch=16, highlight.3d=TRUE,
type="h", main="3D Scatterplot")
plotrgl(new = TRUE)
image2D(volcano, shade = 0.2, rasterImage = TRUE, main = "volcano",
contour = list(col = "white", labcex = 0.8, lwd = 3, alpha = 0.5),
colkey = list(length = 0.5, width = 0.5)  )
plotrgl(new = TRUE)
with(USArrests, text3D(Murder, Assault, Rape,
colvar = UrbanPop, col = gg.col(100), theta = 60, phi = 20,
xlab = "Murder", ylab = "Assault", zlab = "Rape",
main = "USA arrests",
labels = rownames(USArrests), cex =0.6,
bty = "g", ticktype = "detailed", d = 2,
clab = c("Urban Pop"), adj = 0.5, font = 2))
plotrgl(new = TRUE)
with (quakes, scatter3D(x = long, y = lat,
z = rep(-20, length.out = length(long)),
colvar = quakes$depth, col = gg.col(100),
add = TRUE, pch = 18, clab = c("depth", "m"),
colkey = list(length = 0.5, width = 0.5,
dist = 0.05, cex.axis = 0.8, cex.clab = 0.8)
))
plotrgl(new = TRUE)
with (quakes, scatter3D(x = long, y = lat,
z = rep(-20, length.out = length(long)),
colvar = quakes$depth, col = gg.col(100),
add = TRUE, pch = 18, clab = c("depth", "m"),
colkey = list(length = 0.5, width = 0.5,
dist = 0.05, cex.axis = 0.8, cex.clab = 0.8)
))
plotrgl(new = TRUE)
lon <- seq(165.5, 188.5, length.out = 30)
lat <- seq(-38.5, -10, length.out = 30)
xy <- table(cut(quakes$long, lon),
cut(quakes$lat, lat))
xmid <- 0.5*(lon[-1] + lon[-length(lon)])
ymid <- 0.5*(lat[-1] + lat[-length(lat)])
par (mar = par("mar") + c(0, 0, 0, 2))
hist3D(x = xmid, y = ymid, z = xy,
zlim = c(-20, 40), main = "Earth quakes",
ylab = "latitude", xlab = "longitude",
zlab = "counts", bty= "g", phi = 5, theta = 25,
shade = 0.2, col = "white", border = "black",
d = 1, ticktype = "detailed")
test<-data.frame(1:494)
View(test)
test<-data.frame(x=1:494)
View(test)
df <- as.table(rbind(c(3,0,5,5),c(0,0,0,2)))
chisq.test(df)
chisq.test(df)$statistic
chisq.test(df)$statistic[1]
chisq.test(df)$statistic[[1]
chisq.test(df)$statistic[[1]]
chisq.test(df)$statistic
library(MASS)       # load the MASS package
tbl = table(survey$Smoke, survey$Exer)
chisq.test(tbl)
ctbl = cbind(tbl[,"Freq"], tbl[,"None"] + tbl[,"Some"])
chisq.test(ctbl)
chisq.test(tbl)$statistic
chisq.test(ctbl)$statistic
append(chisq.test(tbl)$statistic, chisq.test(ctbl)$statistic)
install.packages("doParallel")
library(doParallel)
cl<-makeCluster(2)
foreach(i=1:3) %dopar% sqrt(i)
systemtime(
foreach(i=1:3) %dopar% sqrt(i)
)
system.time(
foreach(i=1:3) %dopar% sqrt(i)
)
sqrt(1:3)
system.time(
sqrt(1:3)
)
system.time(
sqrt(1:100)
)
system.time(
foreach(i=1:100) %dopar% sqrt(i)
)
system.time(
sqrt(1:1000)
)
system.time(
sqrt(1:100000000)
)
system.time(
foreach(i=1:100000000) %dopar% sqrt(i)
)
registerDoParallel(cl)
sqrt(1:1000)
)
system.time(
sqrt(1:1000)
)
system.time(
foreach(i=1:1000) %dopar% sqrt(i)
)
system.time(
foreach(i=1:100000) %dopar% sqrt(i)
)
system.time(
sqrt(1:100000)
)
detectCores()
cl<-makeCluster(4)
system.time(
foreach(i=1:100000) %dopar% sqrt(i)
)
cl<-makeCluster(4)
registerDoParallel(cl)
system.time(
foreach(i=1:100000) %dopar% sqrt(i)
)
load("/Users/ruisixiong/Downloads/business_raw_flatfile.RData")
View(business)
library(sqldf)
install.packages("sqldf")
library(sqldf)
str(business)
business$attributes.Good.For.Kids[is.na(business$attributes.Good.For.Kids)] = business$attributes.Good.for.Kids[is.na(business$attributes.Good.For.Kids)]
drops <- c("attributes.Good.for.Kids")
business <- business[,!(names(business) %in% drops)]
business$categories <- as.character(business$categories)
business$categories1 <- as.character(business$categories1)
business$categories2 <- as.character(business$categories2)
business$categories3 <- as.character(business$categories3)
business$categories4 <- as.character(business$categories4)
business$categories5 <- as.character(business$categories5)
business$categories6 <- as.character(business$categories6)
business$categories7 <- as.character(business$categories7)
business$categories8 <- as.character(business$categories8)
business$categories9 <- as.character(business$categories9)
business$categories10 <- as.character(business$categories10)
business_clean <- sqldf(
"SELECT *
FROM business
WHERE city='Phoenix'
AND (
categories = 'Restaurants'
OR categories1 = 'Restaurants'
OR categories2 = 'Restaurants'
OR categories3 = 'Restaurants'
OR categories4 = 'Restaurants'
OR categories5 = 'Restaurants'
OR categories6 = 'Restaurants'
OR categories7 = 'Restaurants'
OR categories8 = 'Restaurants'
OR categories9 = 'Restaurants'
OR categories10  = 'Restaurants')"
)
install.packages("tcltk")
install.packages("tcltk")
library(tcltk)
library(sqldf)
load("/Users/ruisixiong/Downloads/business_raw_flatfile.RData")
business$attributes.Good.For.Kids[is.na(business$attributes.Good.For.Kids)] = business$attributes.Good.for.Kids[is.na(business$attributes.Good.For.Kids)]
drops <- c("attributes.Good.for.Kids")
business <- business[,!(names(business) %in% drops)]
business$categories <- as.character(business$categories)
business$categories1 <- as.character(business$categories1)
business$categories2 <- as.character(business$categories2)
business$categories3 <- as.character(business$categories3)
business$categories4 <- as.character(business$categories4)
business$categories5 <- as.character(business$categories5)
business$categories6 <- as.character(business$categories6)
business$categories7 <- as.character(business$categories7)
business$categories8 <- as.character(business$categories8)
business$categories9 <- as.character(business$categories9)
business$categories10 <- as.character(business$categories10)
business_clean <- sqldf(
"SELECT *
FROM business
WHERE city='Phoenix'
AND (
categories = 'Restaurants'
OR categories1 = 'Restaurants'
OR categories2 = 'Restaurants'
OR categories3 = 'Restaurants'
OR categories4 = 'Restaurants'
OR categories5 = 'Restaurants'
OR categories6 = 'Restaurants'
OR categories7 = 'Restaurants'
OR categories8 = 'Restaurants'
OR categories9 = 'Restaurants'
OR categories10  = 'Restaurants')"
)
View(business_clean)
colnames(business_clean)
str(business_clean)
grep("attributes.Hair.Types.Specialized.In", names(business_clean), value = TRUE)
business_clean[grep("attributes.Hair.Types.Specialized.In", names(business_clean), value = TRUE)]
test<-business_clean[grep("attributes.Hair.Types.Specialized.In", names(business_clean), value = TRUE)]
colnames(business_clean)
drops<-c('full_address',"state","attributes.Hair.Types.Specialized.In.coloring.*",)
drops<-c('full_address',"state","city","attributes.Accepts.Insurance")
business_clean<-business_clean[!grep("attributes.Hair.Types.Specialized.In", names(business_clean), value = TRUE)]
business_clean<-business_clean[,!grep("attributes.Hair.Types.Specialized.In", names(business_clean), value = TRUE)]
business_clean<-business_clean[,!grep("attributes.Hair.Types.Specialized.In", names(business_clean), value = TRUE,invert=T)]
business_clean<-business_clean[!grep("attributes.Hair.Types.Specialized.In", names(business_clean), value = TRUE,invert=T)]
business_clean<-business_clean[!grep("attributes.Hair.Types.Specialized.In", names(business_clean))]
load("/Users/ruisixiong/Downloads/business_raw_flatfile.RData")
business$attributes.Good.For.Kids[is.na(business$attributes.Good.For.Kids)] = business$attributes.Good.for.Kids[is.na(business$attributes.Good.For.Kids)]
drops <- c("attributes.Good.for.Kids")
business <- business[,!(names(business) %in% drops)]
business$categories <- as.character(business$categories)
business$categories1 <- as.character(business$categories1)
business$categories2 <- as.character(business$categories2)
business$categories3 <- as.character(business$categories3)
business$categories4 <- as.character(business$categories4)
business$categories5 <- as.character(business$categories5)
business$categories6 <- as.character(business$categories6)
business$categories7 <- as.character(business$categories7)
business$categories8 <- as.character(business$categories8)
business$categories9 <- as.character(business$categories9)
business$categories10 <- as.character(business$categories10)
business_clean <- sqldf(
"SELECT *
FROM business
WHERE city='Phoenix'
AND (
categories = 'Restaurants'
OR categories1 = 'Restaurants'
OR categories2 = 'Restaurants'
OR categories3 = 'Restaurants'
OR categories4 = 'Restaurants'
OR categories5 = 'Restaurants'
OR categories6 = 'Restaurants'
OR categories7 = 'Restaurants'
OR categories8 = 'Restaurants'
OR categories9 = 'Restaurants'
OR categories10  = 'Restaurants')"
)
test<-business_clean
drops<-c('full_address',"state","city","attributes.Accepts.Insurance")
test<-test[,!(names(test) %in% drops)]
grep("attributes.Hair.Types.Specialized.In", names(business_clean))
test[,-grep("attributes.Hair.Types.Specialized.In", names(business_clean))]
test<-test[,-grep("attributes.Hair.Types.Specialized.In", names(business_clean))]
business_clean<-tbusiness_clean[,!(names(business_clean) %in% drops)]
drops<-c('full_address',"state","city","attributes.Accepts.Insurance")
business_clean<-business_clean[,!(names(business_clean) %in% drops)]
business_clean<-business_clean[,-grep("attributes.Hair.Types.Specialized.In", names(business_clean))]
colnames(business_clean)
str(business_clean)
dim(business_clean)
View(business_clean)
summary(business_clean)
str(business_clean)
grep("categories",naems(business_clean))
grep("categories",names(business_clean))
colnames(business_clean)[grep("categories",names(business_clean))]
cat_ind<-grep("categories",names(business_clean))
cat_ind<-grep("categories",names(business_clean))
toFactor<-function(i){
business_clean[i]<-as.factor(business_clean[i])
}
lapply(cat_ind,toFactor)
cat_ind
lapply(as.vector(cat_ind),toFactor)
toFactor<-function(i){
business_clean[i]<-as.factor(business_clean[i])
}
x<-toFactor(1)
business_clean[cat_ind]<-as.factor(business_clean[cat_ind])
business_clean[cat_ind]
vapply(as.vector(cat_ind),toFactor)
toFactor<-function(i){
business_clean[i]<-as.factor(business_clean[i])
}
vapply(as.vector(cat_ind),toFactor)
for (i in cat_ind){
print(i)
}
for (i in cat_ind){
business_clean[i]<-as.factor(business_clean[i])
}
business_clean[1]
cat_ind
x<-5
x
business_clean[13]<-as.factor(business_clean[13])
str(business_clean)
colnames(business_clean)
business_clean$categories1<-as.factor(business_clean$categories1)
business_clean$categories<-as.factor(business_clean$categories)
colnames(business_clean)[cat_ind]
business_clean$categories1<-as.factor(business_clean$categories1)
business_clean$categories1<-as.factor(business_clean$categories1)
business_clean$categories2<-as.factor(business_clean$categories2)
business_clean$categories3<-as.factor(business_clean$categories3)
business_clean$categories4<-as.factor(business_clean$categories4)
business_clean$categories5<-as.factor(business_clean$categories5)
business_clean$categories6<-as.factor(business_clean$categories6)
business_clean$categories7<-as.factor(business_clean$categories7)
business_clean$categories8<-as.factor(business_clean$categories8)
business_clean$categories9<-as.factor(business_clean$categories9)
business_clean$categories10<-as.factor(business_clean$categories10)
str(business_clean)
levels(categories4)
attach(business_clean)
levels(categories4)
levels(categories1)
levels(categories0)
levels(categories)
load("/Users/ruisixiong/Downloads/business_raw_flatfile.RData")
business$attributes.Good.For.Kids[is.na(business$attributes.Good.For.Kids)] = business$attributes.Good.for.Kids[is.na(business$attributes.Good.For.Kids)]
drops <- c("attributes.Good.for.Kids")
business <- business[,!(names(business) %in% drops)]
business$categories <- as.character(business$categories)
business$categories1 <- as.character(business$categories1)
business$categories2 <- as.character(business$categories2)
business$categories3 <- as.character(business$categories3)
business$categories4 <- as.character(business$categories4)
business$categories5 <- as.character(business$categories5)
business$categories6 <- as.character(business$categories6)
business$categories7 <- as.character(business$categories7)
business$categories8 <- as.character(business$categories8)
business$categories9 <- as.character(business$categories9)
business$categories10 <- as.character(business$categories10)
business_clean <- sqldf(
"SELECT *
FROM business
WHERE city='Phoenix'
AND (
categories = 'Restaurants'
OR categories1 = 'Restaurants'
OR categories2 = 'Restaurants'
OR categories3 = 'Restaurants'
OR categories4 = 'Restaurants'
OR categories5 = 'Restaurants'
OR categories6 = 'Restaurants'
OR categories7 = 'Restaurants'
OR categories8 = 'Restaurants'
OR categories9 = 'Restaurants'
OR categories10  = 'Restaurants')"
)
#Delete irrelevant or unnecessary variables
drops<-c('full_address',"state","city","attributes.Accepts.Insurance")
business_clean<-business_clean[,!(names(business_clean) %in% drops)]
business_clean<-business_clean[,-grep("attributes.Hair.Types.Specialized.In", names(business_clean))]
business_clean$categories[,which(business_clean$categories=="Restaurants")]<-1
View(business_clean)
which(business_clean$categories=="Restaurants")
business_clean$categories[which(business_clean$categories=="Restaurants")]<-1
business_clean$categories[!which(business_clean$categories=="Restaurants")]<-0
business_clean$categories<-as.factor(business_clean$categories)
str(business_clean)
load("/Users/ruisixiong/Downloads/business_raw_flatfile.RData")
business$attributes.Good.For.Kids[is.na(business$attributes.Good.For.Kids)] = business$attributes.Good.for.Kids[is.na(business$attributes.Good.For.Kids)]
drops <- c("attributes.Good.for.Kids")
business <- business[,!(names(business) %in% drops)]
business$categories <- as.character(business$categories)
business$categories1 <- as.character(business$categories1)
business$categories2 <- as.character(business$categories2)
business$categories3 <- as.character(business$categories3)
business$categories4 <- as.character(business$categories4)
business$categories5 <- as.character(business$categories5)
business$categories6 <- as.character(business$categories6)
business$categories7 <- as.character(business$categories7)
business$categories8 <- as.character(business$categories8)
business$categories9 <- as.character(business$categories9)
business$categories10 <- as.character(business$categories10)
business_clean <- sqldf(
"SELECT *
FROM business
WHERE city='Phoenix'
AND (
categories = 'Restaurants'
OR categories1 = 'Restaurants'
OR categories2 = 'Restaurants'
OR categories3 = 'Restaurants'
OR categories4 = 'Restaurants'
OR categories5 = 'Restaurants'
OR categories6 = 'Restaurants'
OR categories7 = 'Restaurants'
OR categories8 = 'Restaurants'
OR categories9 = 'Restaurants'
OR categories10  = 'Restaurants')"
)
#Delete irrelevant or unnecessary variables
drops<-c('full_address',"state","city","attributes.Accepts.Insurance")
business_clean<-business_clean[,!(names(business_clean) %in% drops)]
business_clean<-business_clean[,-grep("attributes.Hair.Types.Specialized.In", names(business_clean))]
str(business_clean)
business_clean$categories[which(business_clean$categories=="Restaurants")]<-1
business_clean$categories[!which(business_clean$categories=="Restaurants")]<-0
View(business_clean)
which(business_clean$categories=="Restaurants")
load("/Users/ruisixiong/Downloads/business_raw_flatfile.RData")
business$attributes.Good.For.Kids[is.na(business$attributes.Good.For.Kids)] = business$attributes.Good.for.Kids[is.na(business$attributes.Good.For.Kids)]
drops <- c("attributes.Good.for.Kids")
business <- business[,!(names(business) %in% drops)]
business$categories <- as.character(business$categories)
business$categories1 <- as.character(business$categories1)
business$categories2 <- as.character(business$categories2)
business$categories3 <- as.character(business$categories3)
business$categories4 <- as.character(business$categories4)
business$categories5 <- as.character(business$categories5)
business$categories6 <- as.character(business$categories6)
business$categories7 <- as.character(business$categories7)
business$categories8 <- as.character(business$categories8)
business$categories9 <- as.character(business$categories9)
business$categories10 <- as.character(business$categories10)
business_clean <- sqldf(
"SELECT *
FROM business
WHERE city='Phoenix'
AND (
categories = 'Restaurants'
OR categories1 = 'Restaurants'
OR categories2 = 'Restaurants'
OR categories3 = 'Restaurants'
OR categories4 = 'Restaurants'
OR categories5 = 'Restaurants'
OR categories6 = 'Restaurants'
OR categories7 = 'Restaurants'
OR categories8 = 'Restaurants'
OR categories9 = 'Restaurants'
OR categories10  = 'Restaurants')"
)
#Delete irrelevant or unnecessary variables
drops<-c('full_address',"state","city","attributes.Accepts.Insurance")
business_clean<-business_clean[,!(names(business_clean) %in% drops)]
business_clean<-business_clean[,-grep("attributes.Hair.Types.Specialized.In", names(business_clean))]
str(business_clean)
safe<-business_clean
View(safe)
which(business_clean$categories=="Restaurants")
business_clean$categories[which(business_clean$categories=="Restaurants")]
[!which(business_clean$categories=="Restaurants")
!which(business_clean$categories=="Restaurants")
business_clean$categories[!which(business_clean$categories=="Restaurants")]
business_clean$categories[which(business_clean$categories!="Restaurants")]
is.na(business_clean$categories)
which(is.na(business_clean$categories)==T)
business_clean$categories[which(is.na(business_clean$categories)==T)]<-0
business_clean$categories[which(business_clean$categories=="Restaurants")]<-1
View(business_clean)
grep("neighborhood",names(business_clean))
x<-grep("neighborhood",names(business_clean))
colnames(x)
colnames(business_name)[x]
colnames(business_clean)[x]
unique(business_clean$neighborhoods)
sqldf(
"select DISTINCT neighborhoods FROM business_clean"
)
sqldf(
"select DISTINCT neighborhoods1 FROM business_clean"
)
sqldf(
"select DISTINCT neighborhoods2 FROM business_clean"
)
sqldf(
"select DISTINCT neighborhoods3 FROM business_clean"
)
safe<-business_clean
colnames(business_clean)[x]
business_clean$neighborhoods<-as.factor(business_clean$neighborhoods)
levels(business_clean$neighborhoods)
business_clean$neighborhoods1<-as.factor(business_clean$neighborhoods1)
levels(business_clean$neighborhoods1)
business_clean$neighborhoods2<-as.factor(business_clean$neighborhoods2)
levels(business_clean$neighborhoods2)
business_clean$neighborhoods3<-as.factor(business_clean$neighborhoods3)
levels(business_clean$neighborhoods3)
nafind<-function(x){sum(is.na(x))}
nacount<-apply(business_clean,2,"nafind")
nacount
nrow(business_clean)
varWna <- which(nacount==nrow(business_clean))
varWna
nrow(business_clean)
varWna <- which(nacount>2600)
varWna
which(nacount>2600)
nacount
nacount>2600
which(nacount>2600)
varWna <- which(nacount>2600)
business_clean<-business_clean[,-varWna]
length(varWna)
library(sqldf)
